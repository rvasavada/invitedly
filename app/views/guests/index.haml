%nav.navbar.navbar-default{role: "navigation"}
  / Brand and toggle get grouped for better mobile display
  .navbar-header
    %button.navbar-toggle{"data-target" => "#bs-example-navbar-collapse-1", "data-toggle" => "collapse", type: "button"}
      %span.sr-only Toggle navigation
      %span.icon-bar
      %span.icon-bar
      %span.icon-bar
    %a.navbar-brand{href: "#"} Invitedly
  / Collect the nav links, forms, and other content for toggling
  #bs-example-navbar-collapse-1.collapse.navbar-collapse
    %ul.nav.navbar-nav
      - if user_signed_in? 
        - if current_user.occasion
          %li= link_to "Events", occasion_events_path(current_user.occasion)
          %li.active= link_to "Guests", occasion_guests_path(current_user.occasion)
  

    %ul.nav.navbar-nav.navbar-right
      - if user_signed_in? 
        - if current_user.occasion
          %li.dropdown
            %a.dropdown-toggle{"data-toggle" => "dropdown", href: "#"}
              =current_user.occasion.name
  
              %b.caret
            %ul.dropdown-menu
              %li= link_to "Edit Wedding Details", edit_occasion_path(current_user.occasion)
              %li= link_to "Preview Wedding Page", occasion_path(current_user.occasion, :preview => "true")
        - else
          %li= link_to "New Wedding", new_occasion_path
      - if user_signed_in? 
        %li= link_to "Settings", edit_user_registration_path
        %li= link_to "Sign out", destroy_user_session_path, method: :delete
      -else
        %li= link_to "Sign in", new_user_session_path
        %li= link_to "Sign up", new_user_registration_path

%h1 
  .pull-right= link_to 'New Guest', new_occasion_guest_path(@occasion), class: "btn btn-success"
  Guests
  
      
- if @guests.present?
  .list-group      
    - @guests.each do |guest|
      .list-group-item
        %ul.pull-right.list-inline
          %li= link_to "Edit", edit_occasion_guest_path(@occasion,guest)
          %li= link_to "Delete", [@occasion, guest], method: :delete, data: {confirm: 'Are you sure you want to delete this guest?'}
        %h4.list-group-item-heading
          
          =guest.guest_name
          %small=guest.guest_names

        %p.list-group-item-text


          -if guest.address_1.present?
            ="#{guest.address_1} #{guest.address_2}"
          -if ((guest.city.present? and guest.state.present?) and (guest.country == 'United States'))
            %br
            ="#{guest.city}, #{guest.state} #{guest.zip}" 
          -if ((guest.city.present? and guest.region.present?) and (guest.country != 'United States'))
            %br
            ="#{guest.city}, #{guest.region} #{guest.postal_code}"
          -if guest.country != 'United States'
            %br
            = guest.country
          -if guest.email.present? or guest.home_phone.present? or guest.cell_phone.present?
            %br
          -if guest.email.present?
            %abbr{title:'Email'}E:
            = link_to guest.email, "mailto:#{guest.email}"
          -if guest.home_phone.present?
            %abbr{title:'Home'}H:
            = guest.home_phone
          -if guest.cell_phone.present?
            %abbr{title:'Mobile'}M:
            = guest.cell_phone
          - if guest.notes.present?
            %br
            %br
            %span.text-muted="#{guest.notes}"
            
          %ul.list-inline
            - if guest.invitation.present?
              - guest.rsvps.where(:visibility => true).each do |rsvp|
                %li
                  %span.label{:class => rsvp.response == "Not Responded" ? "label-default" : rsvp.response == "Attending" ? "label-success" : rsvp.response == "Might Attend" ? "label-warning" : rsvp.response == "Not Attending" ? "label-danger" : ""}=Event.find(rsvp.event_id).name

-else
  .well.text-center
    %h3 You have no guests.
    = link_to "Add guests now!", new_occasion_guest_path(@occasion)